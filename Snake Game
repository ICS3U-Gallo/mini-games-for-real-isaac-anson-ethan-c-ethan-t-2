import pygame
import random

pygame.init()

# Screen dimensions
WIDTH = 1000
HEIGHT = 800
SIZE = (WIDTH, HEIGHT)

# Set up the screen and clock
screen = pygame.display.set_mode(SIZE)
clock = pygame.time.Clock()
pygame.display.set_caption('Shark Game')

# Colors
RED = (255, 0, 0)
WHITE = (255, 255, 255)
YELLOW = (255, 255, 102)
BLACK = (0, 0, 0)
SEABLUE = (0,122,165)
GRAY = (169, 169, 169)
DARK_GRAY = (105, 105, 105)
BLUE = (0, 0, 255)
ORANGE = (255, 165, 0)
LIGHT_BLUE = (173, 216, 230)

# ---------------------------
# Initialize global variables
Score = 0

# List to store random fish positions
fish_positions = []


# Score Display Font
font = pygame.font.SysFont("RussoOne", 30)

# Function to draw the shark
def draw_shark():
    pygame.draw.ellipse(screen, GRAY, (250, 300, 200, 75))
    tail_points = [(250, 325), (150, 275), (150, 375)]
    pygame.draw.polygon(screen, DARK_GRAY, tail_points)
    fin_points = [(350, 260), (430, 150), (500, 260)]
    pygame.draw.polygon(screen, DARK_GRAY, fin_points)
    pygame.draw.circle(screen, BLACK, (450, 300), 5)
    pygame.draw.arc(screen, BLACK, (350, 350, 50, 25), 3.14, 0, 3)

# Function to draw a fish
def fish(x, y):
    pygame.draw.ellipse(screen, LIGHT_BLUE, (x, y, 50, 25))
    tail_points = [(x, y + 12), (x - 15, y), (x - 15, y + 25)]
    pygame.draw.polygon(screen, ORANGE, tail_points)
    pygame.draw.circle(screen, BLACK, (x + 35, y + 7), 3)
    pygame.draw.arc(screen, BLACK, (x + 27, y + 15, 10, 5), 3.14, 0, 3)


# Generate random positions for fishes
for i in range(5):
    # Random position for each fish, ensuring it stays within screen bounds
    x_pos = random.randint(0 + 20, WIDTH - 20)  # fish radius is 20, so avoid edges
    y_pos = random.randint(0 + 20, HEIGHT - 20)  # Same for vertical edge
    fish_positions.append((x_pos, y_pos))

# ---------------------------
# Game loop
running = True
while running:
    # EVENT HANDLING
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False




    # Update the score text dynamically
    score_text = f"Score: {Score}"
    text_surface = font.render(score_text, True, BLACK)  # Render the score as a white text
    text_rect = text_surface.get_rect(center=(WIDTH // 2, 30))  # Center the score text at the top

    # DRAWING
    screen.fill(SEABLUE)  # Fill the screen with a light green background



    # Draw all fishes at the stored positions
    for pos in fish_positions:
        fish(pos[0], pos[1])

    #draw shark
    draw_shark()
    # Display the score
    screen.blit(text_surface, text_rect)

    # Update the display
    pygame.display.flip()  # Update the screen with new changes
    clock.tick(15)  # Set the frame rate to 15 FPS for smoother movement

pygame.quit()
